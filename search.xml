<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>YDpen的adb密码修改</title>
    <url>/2025/08/21/YDpen%E7%9A%84adb%E5%AF%86%E7%A0%81%E4%BF%AE%E6%94%B9/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>有道词典笔早期好像使用的是安卓系统，但后面出的笔都不是安卓系统，而是基于Linux的词典笔OS。故即使开启有道词典笔的ADB依然无法实现安装APK等功能，仅限折腾着玩玩罢了。</p>
<p><strong>⚠️ 操作有风险，玩机需谨慎</strong><br>因任何操作造成的包括但不限于变砖、炸App等损失作者均不承担任何责任，也没有义务帮你修复。如有侵权联系删除。</p>
<h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><p>有道词典笔一直都带有ADB开启入口，只需多次点击”法律监管”中的文本即可打开。</p>
<h2 id="破解方案"><a href="#破解方案" class="headerlink" title="破解方案"></a>破解方案</h2><p>本文采用大佬SkySight-666的方案加以改进，靠中间人攻击劫持更新请求从而替换更新包。</p>
<p><strong>参考链接：</strong></p>
<ul>
<li><a href="https://github.com/orgs/PenUniverse/discussions/250">https://github.com/orgs/PenUniverse/discussions/250</a></li>
<li><a href="https://github.com/orgs/PenUniverse/discussions/277">https://github.com/orgs/PenUniverse/discussions/277</a></li>
</ul>
<p><strong>本文用到的全部工具：</strong></p>
<p><a href="https://www.123684.com/s/sE1hjv-mklwd">https://www.123684.com/s/sE1hjv-mklwd</a> 提取码:0m8B</p>
<h2 id="详细步骤"><a href="#详细步骤" class="headerlink" title="详细步骤"></a>详细步骤</h2><h3 id="首先，通过抓包抓取系统全量包"><a href="#首先，通过抓包抓取系统全量包" class="headerlink" title="首先，通过抓包抓取系统全量包"></a>首先，通过抓包抓取系统全量包</h3><p>使用词典笔连接电脑热点，启用wireshark对热点所在连接进行抓包，词典笔检查更新，在wireshark中找到post请求，抓到后可以停止抓包。</p>
<p><img src="/images/2.png"></p>
<h3 id="重新发送更新请求，获取全量包链接"><a href="#重新发送更新请求，获取全量包链接" class="headerlink" title="重新发送更新请求，获取全量包链接"></a>重新发送更新请求，获取全量包链接</h3><p>找一个HTTP测试网站，这里我用的是SOJSON，将Header设置为，将你在获得的数据填入，发送如下请求：</p>
<p>请将以下JSON数据用于HTTP请求：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">json</span><br><span class="line">&#123;</span><br><span class="line">    &quot;timestamp&quot;: &quot;这里你Wireshark获得的timestamp&quot;,</span><br><span class="line">    &quot;sign&quot;: &quot;这里你Wireshark获得的sign&quot;,</span><br><span class="line">    &quot;mid&quot;: &quot;这里你Wireshark获得的mid&quot;, </span><br><span class="line">    &quot;productId&quot;: &quot;这里你Wireshark获得的productID&quot;,</span><br><span class="line">    &quot;version&quot;: &quot;99.99.90&quot;,</span><br><span class="line">    &quot;networkType&quot;: &quot;WIFI&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/images/3.png"></p>
<p>请求完毕我们会获得一个包含完整包链接的json</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">```json</span><br><span class="line">&#123;</span><br><span class="line">   &quot;status&quot;: 1000,</span><br><span class="line">   &quot;msg&quot;: &quot;success&quot;,</span><br><span class="line">   &quot;data&quot;: &#123;</span><br><span class="line">      &quot;releaseNotes&quot;: &#123;</span><br><span class="line">            &quot;publishDate&quot;: &quot;2023-06-26&quot;,</span><br><span class="line">            &quot;version&quot;: &quot;99.99.91&quot;,</span><br><span class="line">            &quot;content&quot;: &quot;[&#123;\&quot;country\&quot;:\&quot;zh_CN\&quot;,\&quot;content\&quot;:\&quot;1.优化系统.修复错误\&quot;&#125;]&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      //&quot;sha256&quot;: &quot;xxxxxxxxxx&quot;,</span><br><span class="line">      &quot;safe&quot;: &#123;</span><br><span class="line">            &quot;encKey&quot;: null,</span><br><span class="line">            &quot;isEncrypt&quot;: 0</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;version&quot;: &#123;</span><br><span class="line">            &quot;segmentMd5&quot;: &quot;[&#123;\&quot;num\&quot;:0,\&quot;startpos\&quot;:0,\&quot;md5\&quot;:\&quot;6afb51af609d5ab205620f2020ed964e\&quot;,\&quot;endpos\&quot;:104857600&#125;,&#123;\&quot;num\&quot;:1,\&quot;startpos\&quot;:104857600,\&quot;md5\&quot;:\&quot;42c6e6b88c0603783765c403b0ed7914\&quot;,\&quot;endpos\&quot;:209715200&#125;,&#123;\&quot;num\&quot;:2,\&quot;startpos\&quot;:209715200,\&quot;md5\&quot;:\&quot;a2d297d5cc33eca65777d2bdcbe98293\&quot;,\&quot;endpos\&quot;:314572800&#125;,&#123;\&quot;num\&quot;:3,\&quot;startpos\&quot;:314572800,\&quot;md5\&quot;:\&quot;5bb85fc4e9539131ff471cf7e1488718\&quot;,\&quot;endpos\&quot;:419430400&#125;,&#123;\&quot;num\&quot;:4,\&quot;startpos\&quot;:419430400,\&quot;md5\&quot;:\&quot;4c5f5f95d49719a23aef3d127f884c1f\&quot;,\&quot;endpos\&quot;:524288000&#125;,&#123;\&quot;num\&quot;:5,\&quot;startpos\&quot;:524288000,\&quot;md5\&quot;:\&quot;b6028cbf53490ff8a72d6b03da64bfdb\&quot;,\&quot;endpos\&quot;:629145600&#125;,&#123;\&quot;num\&quot;:6,\&quot;startpos\&quot;:629145600,\&quot;md5\&quot;:\&quot;4f6d7a683825afdb57291c651fcf0a4c\&quot;,\&quot;endpos\&quot;:734003200&#125;,&#123;\&quot;num\&quot;:7,\&quot;startpos\&quot;:734003200,\&quot;md5\&quot;:\&quot;51441a5ab6fc37076104de26d8d74092\&quot;,\&quot;endpos\&quot;:838860800&#125;,&#123;\&quot;num\&quot;:8,\&quot;startpos\&quot;:838860800,\&quot;md5\&quot;:\&quot;2f282b84e7e608d5852449ed940bfc51\&quot;,\&quot;endpos\&quot;:943718400&#125;,&#123;\&quot;num\&quot;:9,\&quot;startpos\&quot;:943718400,\&quot;md5\&quot;:\&quot;4c48a4078df31327fda7845123a4cb2b\&quot;,\&quot;endpos\&quot;:1048576000&#125;,&#123;\&quot;num\&quot;:10,\&quot;startpos\&quot;:1048576000,\&quot;md5\&quot;:\&quot;2f282b84e7e608d5852449ed940bfc51\&quot;,\&quot;endpos\&quot;:1153433600&#125;,&#123;\&quot;num\&quot;:11,\&quot;startpos\&quot;:1153433600,\&quot;md5\&quot;:\&quot;2f282b84e7e608d5852449ed940bfc51\&quot;,\&quot;endpos\&quot;:1258291200&#125;,&#123;\&quot;num\&quot;:12,\&quot;startpos\&quot;:1258291200,\&quot;md5\&quot;:\&quot;c81029b9c4e0ecf7cbcf1d1afb881f20\&quot;,\&quot;endpos\&quot;:1363148800&#125;,&#123;\&quot;num\&quot;:13,\&quot;startpos\&quot;:1363148800,\&quot;md5\&quot;:\&quot;586c523c54bc9f1042bb92022ac87183\&quot;,\&quot;endpos\&quot;:1397088268&#125;]&quot;,</span><br><span class="line">            &quot;bakUrl&quot;: &quot;http://iotdownbak.mayitek.com/xxxxxxxxxx/xxxxxxx/5383b000-49c2-4d29-812e-42c52b075599.img&quot;,</span><br><span class="line">            &quot;versionAlias&quot;: &quot;&quot;,</span><br><span class="line">            &quot;deltaUrl&quot;: &quot;http://iotdown.mayitek.com/xxxxxxxxxx/xxxxxxx/5383b000-49c2-4d29-812e-42c52b075599.img&quot;,</span><br><span class="line">            &quot;deltaID&quot;: &quot;xxxxxxx&quot;,</span><br><span class="line">            &quot;fileSize&quot;: 1397088268,</span><br><span class="line">            &quot;md5sum&quot;: &quot;5c668394fa2779eada86601292ff877b&quot;,</span><br><span class="line">            &quot;versionName&quot;: &quot;99.99.91&quot;,</span><br><span class="line">            &quot;sha&quot;: &quot;6fdd26798679e5cb1e877051c7970a89307e303&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;policy&quot;: &#123;</span><br><span class="line">            &quot;download&quot;: [</span><br><span class="line">               &#123;</span><br><span class="line">                  &quot;key_name&quot;: &quot;wifi&quot;,</span><br><span class="line">                  &quot;key_message&quot;: &quot;仅wifi下载&quot;,</span><br><span class="line">                  &quot;key_value&quot;: &quot;optional&quot;</span><br><span class="line">               &#125;,</span><br><span class="line">               &#123;</span><br><span class="line">                  &quot;key_name&quot;: &quot;storageSize&quot;,</span><br><span class="line">                  &quot;key_message&quot;: &quot;存储空间不足&quot;,</span><br><span class="line">                  &quot;key_value&quot;: &quot;1397088268&quot;</span><br><span class="line">               &#125;,</span><br><span class="line">               &#123;</span><br><span class="line">                  &quot;key_name&quot;: &quot;forceDownload&quot;,</span><br><span class="line">                  &quot;key_message&quot;: &quot;&quot;,</span><br><span class="line">                  &quot;key_value&quot;: &quot;false&quot;</span><br><span class="line">               &#125;</span><br><span class="line">            ],</span><br><span class="line">            &quot;install&quot;: [</span><br><span class="line">               &#123;</span><br><span class="line">                  &quot;key_name&quot;: &quot;battery&quot;,</span><br><span class="line">                  &quot;key_message&quot;: &quot;电量不足，请充电后重试！&quot;,</span><br><span class="line">                  &quot;key_value&quot;: &quot;30&quot;</span><br><span class="line">               &#125;,</span><br><span class="line">               &#123;</span><br><span class="line">                  &quot;key_name&quot;: &quot;rebootUpgrade&quot;,</span><br><span class="line">                  &quot;key_message&quot;: &quot;&quot;,</span><br><span class="line">                  &quot;key_value&quot;: &quot;false&quot;</span><br><span class="line">               &#125;,</span><br><span class="line">               &#123;</span><br><span class="line">                  &quot;key_name&quot;: &quot;force&quot;,</span><br><span class="line">                  &quot;key_message&quot;: &quot;&quot;,</span><br><span class="line">                  &quot;key_value&quot;: &quot;&#123;\&quot;from\&quot;: \&quot;00:00\&quot;, \&quot;to\&quot;: \&quot;00:00\&quot;,\&quot;gap\&quot;: \&quot;00:00\&quot;&#125;&quot;</span><br><span class="line">               &#125;</span><br><span class="line">            ],</span><br><span class="line">            &quot;check&quot;: [</span><br><span class="line">               &#123;</span><br><span class="line">                  &quot;key_name&quot;: &quot;cycle&quot;,</span><br><span class="line">                  &quot;key_message&quot;: &quot;&quot;,</span><br><span class="line">                  &quot;key_value&quot;: &quot;1500&quot;</span><br><span class="line">               &#125;</span><br><span class="line">            ]</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line">```</span><br></pre></td></tr></table></figure>

<p>应该类似于以上这个文本 通过bakUrl或deltaUrl链接下载文件</p>
<h2 id="使用winhex替换md5值"><a href="#使用winhex替换md5值" class="headerlink" title="使用winhex替换md5值"></a>使用winhex替换md5值</h2><p>​    打开winhex并打开你的完整包img，开启搜索，搜索</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo $PASSWD | md5sum</span><br></pre></td></tr></table></figure>

<p><img src="/images/4.png"></p>
<p>​    千万注意，这里有一个网易挖的坑！！这边代码用的echo会在你输入密码之后加一个换行符 导致密码md5改变 最终校验失败这也是大部分升级成功却依旧密码错误的原因之一！因此我们需要想办法在自己的密码转为md5前也加上换行符。<br>​    总之我们把带换行符一起转换的md5用来替换原img中的md5 然后保存文件</p>
<p>注意：此时文件大小未发生改变 大小一个字节也没变！</p>
<h2 id="计算修改后的文件校验码"><a href="#计算修改后的文件校验码" class="headerlink" title="计算修改后的文件校验码"></a>计算修改后的文件校验码</h2><p>   编辑getnewmd5.py，使得segment_sizes数组中的值为前面抓包抓到的每一个endpos的值，有多少就加多少，</p>
<p>每个机器值可能是不一样多的，然后在cmd中执行’python getnewmd5.py {修改后的img路径}’，并紧跟着执行’certutil -hashfile {修改后的img路径} md5’,<br>   随后我们会获得分片md5和整体md5</p>
<p>   还需要计算一个img的sha256值 得到修改后的img的sha256值 留存备用</p>
<h2 id="搭建更新服务器"><a href="#搭建更新服务器" class="headerlink" title="搭建更新服务器"></a>搭建更新服务器</h2><p>   首先自行安装nodejs 然后编辑YDPen.js，将”JsonData”的内容全部替换为前面抓包抓到的内容，然后手动修改’segmentMd5’中每一个分块的md5值为前面计算得到的md5值，并修改bakUrl和deltaUrl为”http:&#x2F;&#x2F;{本机局域网ip}:14514&#x2F;你修改的完整包.img”，随后修改’md5sum’为前面计算的完整img的md5，sha修改为计算的sha256值</p>
<p>  下拉到js下方部分，修改’&#x2F;product&#x2F;1717746496&#x2F;*********&#x2F;ota&#x2F;checkVersion’为你自己抓到的请求url，保存文件。</p>
<img src="/images/5.png" style="zoom:80%;" />

<p><img src="/images/6.png"></p>
<h2 id="更新自定义固件"><a href="#更新自定义固件" class="headerlink" title="更新自定义固件"></a>更新自定义固件</h2><p>在词典笔连接电脑热点的情况下检查更新，会检测到一个很大的更新包，直接更新即可</p>
<p>**获得adb权限，美美折腾</p>
<p>更新完毕后，待设备重启，再次去法律监管里面连击打开adb，此时连接电脑执行adb shell auth并输入前面转换为md5的密码明文，回车，见证奇迹</p>
<p>**教程结束<br>   本文转载于bilibili听秋念大佬的文章<a href="https://www.bilibili.com/opus/1041644000127221764?spm_id_from=333.1387.0.0">https://www.bilibili.com/opus/1041644000127221764?spm_id_from=333.1387.0.0</a><br>   本文只是加以改进</p>
<p>**结束！</p>
]]></content>
      <categories>
        <category>技术教程</category>
      </categories>
      <tags>
        <tag>有道词典笔</tag>
        <tag>破解</tag>
        <tag>ADB</tag>
        <tag>教程</tag>
        <tag>科技</tag>
      </tags>
  </entry>
  <entry>
    <title>人生第一次处分</title>
    <url>/2025/09/19/first/</url>
    <content><![CDATA[<h2 id="事情的前因后果😓"><a href="#事情的前因后果😓" class="headerlink" title="事情的前因后果😓"></a>事情的前因后果😓</h2><h2 id="起因👀"><a href="#起因👀" class="headerlink" title="起因👀"></a>起因👀</h2><p>我9&#x2F;17傍晚，我突然诗兴大发对我的同桌说:你这么讨厌后面那两个女的，我给你一瓶春药，你把后面那两个女的给操了吧。 我同桌也被逗到了，骂了我几句，又重归于好了。</p>
<p>结果当天晚上，我的同桌也突然诗兴大发了，在他的宿舍里面加了很多不雅的词语，对我这句话大肆宣扬。结果在宿舍里被罗某给记录📝了。</p>
<h3 id="事变🤛"><a href="#事变🤛" class="headerlink" title="事变🤛"></a>事变🤛</h3><p>罗某9&#x2F;18日在教室给那女生说了，然后这个女生去找了在214寝室的人，这些人也是直接就把我同桌说的话给供出来了，于是当天中午11:25左右女生给老师说了，于是乎我没了。</p>
<h2 id="结果👊🏻"><a href="#结果👊🏻" class="headerlink" title="结果👊🏻"></a>结果👊🏻</h2><p>我和同桌被记:<strong>一次班级处分，一次公开检讨，一份给老师的检讨，取消入团资格，单独道歉。</strong></p>
<h1 id="思考🤔"><a href="#思考🤔" class="headerlink" title="思考🤔"></a>思考🤔</h1><p>我不应在后面说他人坏话这样就不会发生这样的事，我也一直想要入团，却因为这个👆🏻无法入团了，唉…..</p>
<p>但是 人生哪有那么一帆风顺，总有一些东西会影响你，你看到这篇文章的时候，我已经过了最艰难的时期。我相信最美好的事情即将发生。</p>
<p>如果你因失去了太阳而流泪，那么你也将失去群星了——泰戈尔《飞鸟集》</p>
<hr>
<h3 id="🌱-关于这次处分的思考"><a href="#🌱-关于这次处分的思考" class="headerlink" title="🌱 关于这次处分的思考"></a>🌱 关于这次处分的思考</h3><p>这次经历让我深刻意识到几个关键点：</p>
<ol>
<li><strong>言语的影响力</strong>：我明白了即使是看似玩笑的话，也可能被传播并造成严重后果。</li>
<li><strong>成长中的挫折</strong>：人生第一次处分让我感到挫败，尤其是我一直以“好学生”形象要求自己。</li>
<li><strong>价值观的考验</strong>：入团资格被取消让我开始反思自己的言行是否真正符合我的价值观。</li>
</ol>
<h3 id="💡-我从挫折中学到的智慧"><a href="#💡-我从挫折中学到的智慧" class="headerlink" title="💡 我从挫折中学到的智慧"></a>💡 我从挫折中学到的智慧</h3><h4 id="1-关于言语边界"><a href="#1-关于言语边界" class="headerlink" title="1. 关于言语边界"></a>1. 关于言语边界</h4><p>我意识到幽默也有边界。这不是要求自己变得沉默寡言，而是学会区分私人玩笑和公共场合的言论——有些话在亲密朋友间可能被理解，但在更广阔的社交环境中容易误解。</p>
<h4 id="2-关于处分与成长"><a href="#2-关于处分与成长" class="headerlink" title="2. 关于处分与成长"></a>2. 关于处分与成长</h4><p>处分带来了短期后果，但我明白真正定义我的不是错误本身，而是我如何回应错误。我的反思和写作让我从中提取价值，这本身就是成长的标志。</p>
<h4 id="3-关于入团资格"><a href="#3-关于入团资格" class="headerlink" title="3. 关于入团资格"></a>3. 关于入团资格</h4><p>虽然入团资格被暂时取消让我失望，但这并不代表永久关闭。我了解到大多数教育系统都提供改过自新和再次申请的机会——我可以通过今后的表现重新争取资格。</p>
<h3 id="🚀-我如何向前看"><a href="#🚀-我如何向前看" class="headerlink" title="🚀 我如何向前看"></a>🚀 我如何向前看</h3><ol>
<li><strong>以积极态度完成处分要求</strong>：我会认真撰写检讨，不是作为惩罚，而是作为真诚反思的机会。公开道歉时保持诚恳，希望能赢得理解。</li>
<li><strong>重建信任的计划</strong>：我打算与老师交流，分享我的学习心得和未来计划，听取他们对我行为的建议。</li>
<li><strong>转向行动</strong>：我会将注意力从“失去”转向“获得”——通过参与班级服务或志愿活动，实践更好的自己。</li>
<li><strong>发挥创意表达</strong>：我会通过写诗、故事或博客定向释放自己的创造力和表达力。</li>
</ol>
<h3 id="🌈-最后的鼓励"><a href="#🌈-最后的鼓励" class="headerlink" title="🌈 最后的鼓励"></a>🌈 最后的鼓励</h3><p>我相信“最美好的事情即将发生”——这种心态让我保持希望。<strong>挫折不是道路的终点，而是重新选择方向的岔口</strong>。</p>
<p>泰戈尔的话点醒了我：“如果你因失去了太阳而流泪，那么你也将失去群星了。”处分就像那暂时失去的太阳，但我不会因此错过眼前依然闪烁的群星——我的学习能力、反思勇气、创造力和对未来的希望。</p>
<p><strong>有些课程不在课本之中，却能在心灵深处留下最明亮的印记</strong>。我已经从这次经历中提取了智慧，这是真正成长的标志。我会继续前进，带着这次学习到的分寸感和韧性。</p>
<h1 id="最后的结果🤠"><a href="#最后的结果🤠" class="headerlink" title="最后的结果🤠"></a>最后的结果🤠</h1><p>无人忏悔💔</p>
<p>没有人怪我</p>
<p>以下是我冒死到办公室里偷拍的检讨</p>
<p><img src="https://img.cdn1.vip/i/68cfaf11da38f_1758441233.webp"></p>
]]></content>
      <categories>
        <category>过错</category>
      </categories>
      <tags>
        <tag>反思</tag>
        <tag>学校</tag>
        <tag>错误</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客添加评论系统</title>
    <url>/2025/08/23/hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<!-- 文章正文开头... -->

<span id="more"></span>

<h1 id="hexo博客添加评论系统"><a href="#hexo博客添加评论系统" class="headerlink" title="hexo博客添加评论系统"></a>hexo博客添加评论系统</h1><p>在Hexo框架下的博客有很多种实现评论系统的方式。我这里采用了Giscus实现评论系统，这是利用<a href="https://docs.github.com/en/discussions">GitHub Discussions</a>实现的评论系统，优点包括但不限于： - 开源、无广告、永久免费 - 无需自建数据库（数据储存在项目仓库的Discussions中） - 用户通过GitHub账户登录，简化注册流程，也增强了评论者的身份可信度、便于评论的及时回复与管理 - 支持自定义主题样式、评论排序、过滤等功能 - 配置简单，几分钟就能搞定</p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>进入在GitHub账户中对Giscus的<a href="https://github.com/apps/giscus">安装界面</a>点击install进行安装。</p>
<h3 id="官网配置"><a href="#官网配置" class="headerlink" title="官网配置"></a><a href="https://giscus.app/zh-CN">官网</a>配置</h3><p>选择一个GitHub仓库用于储存评论数据，可以是博客项目仓库，也可以是专门用于储存评论数据的仓库。但要确保仓库满足3个条件：</p>
<ol>
<li><p>该仓库是<strong>公开的</strong>，否则访客将无法查看评论信息；</p>
</li>
<li><p>giscus app 已安装，否则访客将无法评论和回应（上一步已完成这一条件）；</p>
</li>
<li><p>Discussions 功能<strong>已在你的仓库中启用</strong>。 进入对应的仓库，点击右上角的 <code>Settings</code>，往下翻到<code>Features</code>，勾选<code>Discussions</code>。</p>
<p>输入仓库（用户名&#x2F;仓库名）后，系统会提示你该仓库是否满足所有条件</p>
<blockquote>
<p>有个小细节，我逐字母输入这个空的时候明明该仓库符合所有条件它还是会显示不可以使用，但我直接复制粘贴仓库地址时它就显示可以使用了。不知道算不算一个bug</p>
</blockquote>
<p>后面有一些个性化设置，比如： - 【页面 &lt;-&gt; Discussion映射关系】 这个决定你用于存储评论数据的仓库中Discussion如何分类显示，以及giscus如何筛选仓库Discussion中该页面的信息显示在网页上。如果使用<code>pathname</code>而你的博客标题是中文的话，Discussion界面会显示一串很长的码，不易分辨来自哪篇帖子。<strong>所以这里我选择了<code>title</code>，这样Discussion标题里的中文是可以正常显示的。</strong> - 【Discussion分类】 建议选择<code>Announcements</code>，并勾选下面的“只搜索该分类中的discussion” - 【特性】 建议勾选“启用主帖子上的反应（可以给博客文章贴表情）”“将评论框放在评论上方”和“懒加载评论（评论的加载将延迟到用户滚动到评论容器附近，有助于博客界面的快速加载，是一种前端显示的优化手段）” - 【主题】 建议勾选“用户偏好的色彩方案”，这个随意</p>
<h3 id="启用giscus"><a href="#启用giscus" class="headerlink" title="启用giscus"></a>启用giscus</h3><p>完成上述设置之后，下面会自动生成对应的javascript代码。比如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script src=&quot;https://giscus.app/client.js&quot;</span><br><span class="line">        data-repo=&quot;jachinzhang1/jachinzhang1.github.io&quot;</span><br><span class="line">        data-repo-id=&quot;R_kgDONy_q0w&quot;</span><br><span class="line">        data-category=&quot;Announcements&quot;</span><br><span class="line">        data-category-id=&quot;DIC_kwDONy_q084Cmo0P&quot;</span><br><span class="line">        data-mapping=&quot;title&quot;</span><br><span class="line">        data-strict=&quot;0&quot;</span><br><span class="line">        data-reactions-enabled=&quot;1&quot;</span><br><span class="line">        data-emit-metadata=&quot;0&quot;</span><br><span class="line">        data-input-position=&quot;top&quot;</span><br><span class="line">        data-theme=&quot;preferred_color_scheme&quot;</span><br><span class="line">        data-lang=&quot;zh-CN&quot;</span><br><span class="line">        data-loading=&quot;lazy&quot;</span><br><span class="line">        crossorigin=&quot;anonymous&quot;</span><br><span class="line">        async&gt;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li>
</ol>
<p>如何应用于博客上的方式应该是因博客主题而异的，可以参考主题的使用文档（大多数可能是需要在<strong>对应主题</strong>的配置yml文件中设置的）。</p>
<p>完成这些配置之后重新生成网页文件，应该就可以看到评论系统了。访客通过GitHub账号登录即可评论。来自本地服务器预览和域名访问的评论都会实时在仓库的Discussions中显示，并会通过邮件提醒仓库的所有者。<del>所以拒绝恶意刷屏从你我做起</del></p>
]]></content>
      <categories>
        <category>技术教程</category>
      </categories>
      <tags>
        <tag>博客管理</tag>
      </tags>
  </entry>
  <entry>
    <title>Qexo的安装与配置</title>
    <url>/2025/09/13/qexo/</url>
    <content><![CDATA[<h1 id="Qexo的安装"><a href="#Qexo的安装" class="headerlink" title="Qexo的安装"></a>Qexo的安装</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><strong>最近我一直在配置这个博客，但由于我只是一个初中生，所以现在开学了后我的时间越来越少了，还有数不清的作业，且作者还是住读生，一周下来接触电脑的时间啄食可悲，于是想到给我的博客做一个管理后台，先前尝试了不少方案，无一例外，全都缺少一个美观的界面和博客配置管理，直到我发现了这个——Qexo，这个真是集结了我所有想要的功能，简直完美！好，废话不多说，开始配置！</strong></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Qexo可以通过docker或vercel来安装，我这边用的是vercel，你可以通过 Vercel 提供的免费数据库。但请注意这是个 Beta 功能</strong> <a href="https://vercel.com/new/clone?repository-url=https://github.com/am-abudu/Qexo">vercel一键部署</a> <strong>首次部署会报错, 请无视并进行接下来的步骤。</strong></p>
<h3 id="申请-Vercel-数据库"><a href="#申请-Vercel-数据库" class="headerlink" title="申请 Vercel 数据库"></a>申请 Vercel 数据库</h3><p><strong>进入Vercel Storage 界面 然后点击右上角的 Create Database 并选择 Postgres 创建免费 PostgreSQL 数据库, 在 Connect 页面获取数据库连接信息。请注意在地区选择的位置选择与你上一步项目对应的地区（通常为 Washington, D.C., USA (East) - iad1）。</strong></p>
<h3 id="绑定项目"><a href="#绑定项目" class="headerlink" title="绑定项目"></a>绑定项目</h3><p><strong>在左侧边栏选择 Projects 点击 Connect Project 连接到你第一步创建的项目</strong></p>
<h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><p><strong>回到你的项目页面，在 Deployments 点击 Redeploy 开始部署, 若没有 Error 信息即可打开域名进入初始化引导</strong></p>
<p><strong>当然，你也可以使用其他数据库如:PlanetScale，SupaBase，MongoDB等。参考</strong><a href="https://oplog.cn/qexo/start/build.html">原文档</a></p>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h3><p>**这一步需要你把你的Hexo博客源文件上传到GitHub 如果部署中遇到问题, 可以访问 **<a href="https://hexoplusplus.cronfly.workers.dev/?step=start">检查助手</a> 自检配置 仅支持Github, 若确认无误, 可检查仓库内是否有已经发布的文章。</p>
<p>**这里还需要一个token来让Qexo可以访问我们的仓库，于 **<a href="https://github.com/settings/tokens">GitHub设置</a> 生成的 Token (建议使用 Classical) 需要 Repo &amp; Workflow 下的权限 不建议给出所有权限。其他啥的就看<a href="https://oplog.cn/qexo/configs/provider.html">这个</a>。</p>
<h3 id="Vercel"><a href="#Vercel" class="headerlink" title="Vercel"></a>Vercel</h3><p><strong>VERCEL_TOKEN</strong> **您的 Vercel 账户密钥 在 **<a href="https://oplog.cn/qexo/configs/vercel.html">此处</a> 生成</p>
<p><strong>PROJECT_ID</strong> <strong>您 Qexo 部署所在项目的 ID 位于 Project Settings -&gt; General -&gt; Project ID🆔</strong></p>
<h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><p><strong>至此如果没有问题的话，你就可以正常的进入Qexo的管理界面了</strong></p>
<h1 id="Qexo的配置"><a href="#Qexo的配置" class="headerlink" title="Qexo的配置"></a>Qexo的配置</h1><h2 id="图床配置（GitHub）"><a href="#图床配置（GitHub）" class="headerlink" title="图床配置（GitHub）"></a>图床配置（GitHub）</h2><p><strong>我这边用的是GitHub图床</strong><br><strong><img src="https://img.cdn1.vip/i/68c6152d35ea2_1757812013.png"></strong></p>
<p><strong>(不建议)将图片上传至 Github 仓库以借助 Github Action 进行进一步操作</strong></p>
<h3 id="Github仓库"><a href="#Github仓库" class="headerlink" title="Github仓库"></a>Github仓库</h3><p><strong>您图片上传到的仓库</strong></p>
<p><code>username/repo</code></p>
<h3 id="项目分支"><a href="#项目分支" class="headerlink" title="项目分支"></a>项目分支</h3><p><strong>您图片需要上传仓库的分支</strong></p>
<p><code>master</code></p>
<h3 id="Github-密钥"><a href="#Github-密钥" class="headerlink" title="Github 密钥"></a>Github 密钥</h3><p>**于 **<a href="https://github.com/settings/tokens">GitHub设置</a>生成的 Token 需要 Repo 下的至少读取和写入权限 不建议给出所有权限</p>
<p><code>wrq_P8sYPlYA9fjMlOPEYSKA84xxxxxxxxxxxxxx</code></p>
<h3 id="保存路径"><a href="#保存路径" class="headerlink" title="保存路径"></a>保存路径</h3><p><strong>文件上传后保存的路径 包含文件名</strong></p>
<table>
<thead>
<tr>
<th><strong>关键词</strong></th>
<th><strong>意义</strong></th>
<th><strong>示例</strong></th>
</tr>
</thead>
<tbody><tr>
<td><em>{year}</em></td>
<td><strong>当前年份</strong></td>
<td><strong>21</strong></td>
</tr>
<tr>
<td><em>{month}</em></td>
<td><strong>当前月份</strong></td>
<td><strong>1</strong></td>
</tr>
<tr>
<td><em>{day}</em></td>
<td><strong>当前日份</strong></td>
<td><strong>2</strong></td>
</tr>
<tr>
<td><em>{YEAR}</em></td>
<td><strong>当前年份</strong></td>
<td><strong>2021</strong></td>
</tr>
<tr>
<td><em>{MONTH}</em></td>
<td><strong>当前月份</strong></td>
<td><strong>01</strong></td>
</tr>
<tr>
<td><em>{DAY}</em></td>
<td><strong>当前日份</strong></td>
<td><strong>02</strong></td>
</tr>
<tr>
<td><em>{filename}</em></td>
<td><strong>无后缀的文件名</strong></td>
<td><strong>image</strong></td>
</tr>
<tr>
<td><em>{time}</em></td>
<td><strong>时间戳</strong></td>
<td><strong>1640186955.4339228</strong></td>
</tr>
<tr>
<td><em>{md5}</em></td>
<td><strong>文件 MD5-Hash</strong></td>
<td><strong>0c8bfe6821a91c3d96b25e2ea2dcf827</strong></td>
</tr>
</tbody></table>
<h3 id="自定义域名"><a href="#自定义域名" class="headerlink" title="自定义域名"></a>自定义域名</h3><p><strong>返回文件链接的 URL 最终返回的链接, 支持关键词同上</strong></p>
<p><a href="https://github.com/username/repo/raw/master/Qexo/">https://github.com/username/repo/raw/master/Qexo/</a>{year}&#x2F;{month}&#x2F;{filename}_{md5}.{extName}</p>
<h1 id="完成✅"><a href="#完成✅" class="headerlink" title="完成✅"></a>完成✅</h1><p><strong>如果没有问题的话，那现在就成了，你现在就可以正常的在Qexo里写✍🏻文章了！</strong></p>
]]></content>
      <categories>
        <category>技术教程</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>博客管理</tag>
        <tag>GitHub</tag>
        <tag>hexo</tag>
        <tag>网站</tag>
      </tags>
  </entry>
  <entry>
    <title>vercel部署twikoo评论系统</title>
    <url>/2025/08/25/vercel%E9%83%A8%E7%BD%B2twikoo%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<!-- 文章正文开头... -->

<span id="more"></span>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本站评论系统曾一直使用Giscus，但是朋友们似乎大部分都没有GitHub账号，所以交流非常不方便，于是找到了<a href="https://twikoo.js.org/">Twikoo</a>评论系统，部署过程参考本文</p>
<h1 id="2-Twikoo简介"><a href="#2-Twikoo简介" class="headerlink" title="2 Twikoo简介"></a>2 Twikoo简介</h1><p><a href="https://twikoo.js.org/">Twikoo</a>是一个简洁、安全、免费的静态网站评论系统。</p>
<p>与waline相比，<br>优势：差不多；<br>不足：不支持IE，私有部署需要配置图床。</p>
<h1 id="3-Vercel部署Twikoo评论系统"><a href="#3-Vercel部署Twikoo评论系统" class="headerlink" title="3 Vercel部署Twikoo评论系统"></a>3 Vercel部署Twikoo评论系统</h1><h2 id="3-1-创建MongoDB-Cloud数据库"><a href="#3-1-创建MongoDB-Cloud数据库" class="headerlink" title="3.1 创建MongoDB Cloud数据库"></a>3.1 创建MongoDB Cloud数据库</h2><p><strong>（1）添加User</strong><br>登录<a href="https://cloud.mongodb.com/">MongoDB Cloud</a>官网（没账号需要先<a href="https://www.mongodb.com/cloud/atlas/register">注册</a>），在<code>Database Access</code>页面点击<code>Add New Database User</code>创建数据库用户，<code>Authentication Method</code>选<code>Password</code>，在<code>Password Authentication</code>下设置数据库用户名和密码，用户名和密码可包含数字和大小写字母，不能包含特殊符号。点击<code>Database User Privileges</code>下方的<code>Add Built In Role</code>，<code>elect Role</code>选择<code>Atlas Admin</code>，最后点击<code>Add User</code></p>
<p><strong>（2）添加Network Access</strong><br>在<code>Network Access</code>页面点击<code>Add IP Address</code>，<code>Access List Entry</code>输入<code>0.0.0.0/0</code>（允许所有IP地址的连接），点击<code>Confirm</code></p>
<p><strong>(3) 获取数据库连接字符串</strong><br>在<code>Database</code>页面点击<code>Connect</code>，连接方式选择<code>Drivers</code>，记录数据库连接字符串，将连接字符串中的<code>&lt;password&gt;</code>修改为刚刚创建的数据库密码</p>
<h2 id="3-2-Vercel部署Twikoo"><a href="#3-2-Vercel部署Twikoo" class="headerlink" title="3.2 Vercel部署Twikoo"></a>3.2 Vercel部署Twikoo</h2><p><strong>(1) 一键部署</strong><br>点击<a href="https://vercel.com/import/project?template=https://github.com/twikoojs/twikoo/tree/main/src/server/vercel-min"><strong>此处</strong></a>，一键部署到Vercel</p>
<p><strong>(2) 配置环境变量</strong><br>选择新建的Twikoo项目，进入<code>Settings -&gt; Environment Variables</code>，添加环境变量<code>MONGODB_URI</code>，值为前面的MongoDB数据库连接字符串（注意替换<code>&lt;Password&gt;</code>）。</p>
<p><strong>(3) redeploy</strong><br>进入<code>Deployments</code>，进行<code>Redeploy</code></p>
<p>等待重新部署完成后，进入<code>Project</code>，查看<code>Overview</code>或者点击<code>visit</code>，可以看见“Twikoo 云函数运行正常”的提示，部署成功</p>
<p><strong>(4) 绑定域名</strong><br>进入<code>Settings -&gt; Domains</code>，在此处填写要绑定的域名，并在域名服务商配置中添加cname类型解析记录。</p>
<h1 id="4-在Hexo-Ayer主题中使用Twikoo（配置Twikoo前端）"><a href="#4-在Hexo-Ayer主题中使用Twikoo（配置Twikoo前端）" class="headerlink" title="4 在Hexo Ayer主题中使用Twikoo（配置Twikoo前端）"></a>4 在Hexo Ayer主题中使用Twikoo（配置Twikoo前端）</h1><h2 id="4-1-修改主题配置文件"><a href="#4-1-修改主题配置文件" class="headerlink" title="4.1 修改主题配置文件"></a>4.1 修改主题配置文件</h2><p>编辑主题配置文件，修改Twikoo评论相关配置，envId为部署的访问地址（或绑定域名），基于vercel部署<code>region</code>和<code>path</code>不必填写</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">twikoo:</span><br><span class="line">  enable: true</span><br><span class="line">  envId: ‘your twikoo url’</span><br><span class="line">  region: </span><br><span class="line">  path: </span><br><span class="line">  lang: zh-CN</span><br></pre></td></tr></table></figure>

<h2 id="4-2-初始化Twikoo"><a href="#4-2-初始化Twikoo" class="headerlink" title="4.2 初始化Twikoo"></a>4.2 初始化Twikoo</h2><p>启动Hexo，如果配置没有问题，在开启评论的页面可以看见Twikoo的评论界面，点击配置图案进行初始化配置</p>
<h1 id="5-总结"><a href="#5-总结" class="headerlink" title="5 总结"></a>5 总结</h1><p>一番折腾下来，我发现Twikoo还是存在亿点不足。通过Vercel部署的Twikoo不能上传图片，还需要自己配置图床（且支持的图床也不多），访问速度和流畅性也一般。</p>
]]></content>
      <categories>
        <category>技术教程</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>博客管理</tag>
        <tag>hexo</tag>
        <tag>网站</tag>
      </tags>
  </entry>
</search>
